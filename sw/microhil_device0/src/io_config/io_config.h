/* -*- Mode: C; indent-tabs-mode: t; c-basic-offset: 4; tab-width: 4 -*-  */
/*
 * io_config.h
 * Copyright (C) 2023 Vladimir Roncevic <elektron.ronca@gmail.com>
 *
 * microhil-device0 is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * microhil-device0 is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program_name. If not, see <http://www.gnu.org/licenses/>.
 */
#pragma once

#include "pico/stdlib.h"
#include "hardware/spi.h"
#include "stdio.h"
#include "hardware/i2c.h"
#include "hardware/pwm.h"

////////////////////////////////////////////////////////////////////////////
/// @brief
#define SPI_PORT spi1

////////////////////////////////////////////////////////////////////////////
/// @brief
#define I2C_PORT spi1

////////////////////////////////////////////////////////////////////////////
/// @brief
extern int EPD_RST_PIN;

////////////////////////////////////////////////////////////////////////////
/// @brief
extern int EPD_DC_PIN;

////////////////////////////////////////////////////////////////////////////
/// @brief
extern int EPD_CS_PIN;

////////////////////////////////////////////////////////////////////////////
/// @brief
extern int EPD_BL_PIN;

////////////////////////////////////////////////////////////////////////////
/// @brief
extern int EPD_CLK_PIN;

////////////////////////////////////////////////////////////////////////////
/// @brief
extern int EPD_MOSI_PIN;

////////////////////////////////////////////////////////////////////////////
/// @brief
extern int EPD_SCL_PIN;

////////////////////////////////////////////////////////////////////////////
/// @brief
extern int EPD_SDA_PIN;

////////////////////////////////////////////////////////////////////////////
/// @brief
extern uint slice_num;

////////////////////////////////////////////////////////////////////////////
/// @brief
/// @param pin
/// @param mode
void microhil_gpio_mode(uint16_t pin, uint16_t mode);

////////////////////////////////////////////////////////////////////////////
/// @brief
/// @param pin
/// @param value
void microhil_digital_write(uint16_t pin, uint8_t value);

////////////////////////////////////////////////////////////////////////////
/// @brief
/// @param pin
/// @return
uint8_t microhil_digital_read(uint16_t pin);

////////////////////////////////////////////////////////////////////////////
/// @brief
/// @param value
void microhil_spi_write_byte(uint8_t value);

////////////////////////////////////////////////////////////////////////////
/// @brief
/// @param data
/// @param len
void microhil_spi_write_n_bytes(uint8_t *data, uint32_t len);

////////////////////////////////////////////////////////////////////////////
/// @brief
/// @param ms
void microhil_delay_ms(uint32_t ms);

////////////////////////////////////////////////////////////////////////////
/// @brief
/// @param us
void microhil_delay_us(uint32_t us);

////////////////////////////////////////////////////////////////////////////
/// @brief
/// @param addr
/// @param reg
/// @param value
void microhil_i2c_write_byte(uint8_t addr, uint8_t reg, uint8_t value);

////////////////////////////////////////////////////////////////////////////
/// @brief
/// @param addr
/// @param data
/// @param len
void microhil_i2c_write_n_bytes(uint8_t addr, uint8_t *data, uint32_t len);

////////////////////////////////////////////////////////////////////////////
/// @brief
/// @param addr
/// @param reg
/// @return
uint8_t microhil_i2c_read_byte(uint8_t addr, uint8_t reg);

////////////////////////////////////////////////////////////////////////////
/// @brief
/// @param value
void microhil_set_pwm_1(uint8_t value);

////////////////////////////////////////////////////////////////////////////
/// @brief
/// @return
uint8_t microhil_module_init();

////////////////////////////////////////////////////////////////////////////
/// @brief
void microhil_module_exit();
